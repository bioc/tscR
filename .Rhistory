library(tscR)
library(tidyverse)
library(sqldf)
df<-read.table("../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
dyn.load("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/libs/tscR.so")
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
dim(df2)[2]
time <- c(1,2,3,4)
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
df2 <- sample_n(df,2000)
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
gcf <- getClusters(fd, 10)
library(tscR)
library(tscR)
df2 <- sample_n(df,1000)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
library(tscR)
library(tscR)
library(tscR)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
library(tscR)
library(tscR)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
plotCluster(df2, gc)
plotCluster(df2, gcf)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc)
plotCluster(df2, gc)
plotCluster(df2, gcf)
#combinar clusters
cc <- combineCluster(gc, gcf)
plotCluster(df2, cc)
cc$clustering
str(cc)
unique(cc$clustering)
df<-read.table("../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
## Si tenemos muchos datos:
is <- imputeSenators(df2, k=100)
x<-df2
k=100
result <- clara(x, k)
senatorsWeight <- as.integer(table(result$clustering))
mySenators <- result$clustering
senatorsWide <- result$medoids
reOrder <- sort(table(result$clustering),decreasing=TRUE)
mySenators <- match(mySenators,names(reOrder))
senatorsWeight <- as.integer(reOrder)
names(senatorsWeight) <- paste("sen",1:100,sep="")
senatorsWide <- senatorsWide[as.integer(names(reOrder)),]
rownames(senatorsWide) <- names(senatorsWeight)
mySenator <- data.frame(id=df,senators=paste("sen",mySenators,sep=""))
mySenator <- data.frame(id=x,senators=paste("sen",mySenators,sep=""))
senatorObj<-list(mySenator=mySenator,senatorsWide=senatorsWide,senatorsWeight=senatorsWeight)
return(senatorObj)
library(tscR)
library(tscR)
library(tscR
)
## Si tenemos muchos datos:
is <- imputeSenators(df2, k=100)
is
## Si tenemos muchos datos:
senators <- imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsWide)
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- getCluster(sDist, 4)
sClust <- getClusters(sDist, 4)
plotCluster(senators$senatorsWide, sClust)
senators$senatorsWide
plotCluster(senators$senatorsWide, sClust)
sClust
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- getClusters(sDist, 4)
sClust
sClust <- getClusters(sDist, 4)
sDist
myclust <- pam(sDist, k=4, diss = T)
myclust
sClust <- tscR::getClusters(sDist, k=4)
sClust
plotCluster(senators$senatorsWide, sClust)
fClust <- tscR::getClusters(fDist, 4)
plotCluster(senators$senatorsWide, fClust)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
#matplot( t(endData@data[1:1000,]), type = "l", lty = 1, col = fcolor(clusteres) )
plot.cluster.senator(endData, multiple = T, ncluster = 3)
#matplot( t(endData@data[1:1000,]), type = "l", lty = 1, col = fcolor(clusteres) )
plotClusterSenator(endData, multiple = T, ncluster = 3)
library(tidyverse)
library(sqldf)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
senators <- tscR::imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsWide, time)
library(tscR)
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- tscR::getClusters(sDist, k=4)
plotCluster(senators$senatorsWide, sClust)
fClust <- tscR::getClusters(fDist, 4)
plotCluster(senators$senatorsWide, fClust)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = fClust)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4))
library(tscR)
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4))
is.numeric(ncluster)
ncluster = c(1,2,3,4)
is.numeric(ncluster)
length(ncluster)>1
is.numeric(ncluster) & length(ncluster)>1
length(ncluster)==1 & ncluster == "all"
length(ncluster)==1
length(ncluster)==1 && ncluster == "all"
length(ncluster)==1 && ncluster != "all"
a <- c(1,2,3,4)
leng
length(a)>1 & a[1]=2
length(a)>1 & a[1]==2
length(a)>1 & a[1]==1
length(a)>1 & a[==1
length(a)>1 & a==1
length(a)>1 && a==1
length(a)>1 && a==4
plotClusterSenator(endData, ncluster = c(1,2,3,4))
library(tscR)
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData, ncluster = "all")
sClust <- tscR::getClusters(sDist, k=6)
plotCluster(senators$senatorsWide, sClust)
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorsWide, fClust)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = fClust)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- tscR::getClusters(sDist, k=6)
plotCluster(senators$senatorsWide, sClust)
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorsWide, fClust)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
