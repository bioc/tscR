ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{i1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{i2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{i3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{j1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{j2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{j3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{k1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{k2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{k3}$")  ) +
geom_text(aes(x=1, y=11, label = "(i)"))+
theme(legend.position = "none")+
xlab("") + ylab("")
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{i1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{i2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{i3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{j1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{j2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{j3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{k1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{k2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{k3}$")  ) +
geom_text(aes(x=1, y=11, label = "(Traject i)"))+
theme(legend.position = "none")+
xlab("") + ylab("")
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{i1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{i2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{i3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{j1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{j2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{j3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{k1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{k2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{k3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. i"))+
theme(legend.position = "none")+
xlab("") + ylab("")
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{i1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{i2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{i3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{j1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{j2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{j3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{k1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{k2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{k3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. i"))+
geom_text(aes(x=1, y=4, label = "Traject. j"))+
geom_text(aes(x=1, y=-17, label = "Traject. k"))+
theme(legend.position = "none")+
xlab("") + ylab("")
dsE <- dist(dfx, method = "eclidean", diag = F, upper = F)
dsE
dsE <- dist(dfx, method = "euclidean", diag = F, upper = F)
dsE
dsE <- round( dist(dfx, method = "euclidean", diag = F, upper = F), 3)
dsE
i <- c(10, 15, 17, 25)
j <- c(5, 8, 6, 9 )
k <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
i <- c(10, 15, 17, 25)
j <- c(5, 8, 6, 9 )
k <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
df <- as.data.frame(cbind(x,i,j,k))
ggplot(df, aes(x=x))+
geom_line(aes(y=i), color = "red")+
geom_point(y=i, col="red")+
geom_line(aes(y=j))+
geom_point(y=j)+
geom_line(aes(y=k), color = "steelblue")+
geom_point(y=k, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{i1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{i2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{i3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{j1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{j2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{j3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{k1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{k2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{k3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. i"))+
geom_text(aes(x=1, y=4, label = "Traject. j"))+
geom_text(aes(x=1, y=-17, label = "Traject. k"))+
theme(legend.position = "none")+
xlab("") + ylab("")
dfx <- as.matrix(rbind(i,j,j))
dsE <- round( dist(dfx, method = "euclidean", diag = F, upper = F), 3)
dsE
dfx <- as.matrix(rbind(i,j,k))
dsE <- round( dist(dfx, method = "euclidean", diag = F, upper = F), 3)
dsE
DT::datatable(as.matrix(dsE))
dsE
\begin{matrix}
& i &j \\
j & 21.24 & \\
k & 54.00 & 39.41
\end{matrix}
\begin{matrix}
& i &j \\
j & 21.24 & \\
k & 54.00 & 39.41
\end{matrix}
k
tscR::frechetDistC(xdf, time)
tscR::frechetDistC(dfx, time)
tscR::frechetDistC(dfx, time)
dF <- tscR::frechetDistC(dfx, time)
dF
TSdist::DTWDistance(i,j)
dt1 <- TSdist::DTWDistance(i,j)
dt2 <- TSdist::DTWDistance(i,k)
dt3 <- TSdist::DTWDistance(j,k)
dt1
dt2
dt3
time
dt1 <- TSdist::DTWDistance(i,j)
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = F, comment = F)
library(ggplot2)
library(latex2exp)
library(tscR)
library(TSdist)
a <- c(10, 15, 17, 25)
b <- c(5, 8, 6, 9 )
c <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
df <- as.data.frame(cbind(x,a,b,c))
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{a1}$")  ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{a2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{a3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{b1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{b2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{b3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{c1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{c2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{c3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. a"))+
geom_text(aes(x=1, y=4, label = "Traject. b"))+
geom_text(aes(x=1, y=-17, label = "Traject. c"))+
theme(legend.position = "none")+
xlab("") + ylab("")
dfx <- as.matrix(rbind(a,b))
library(ggplot2)
library(latex2exp)
library(tscR)
library(TSdist)
a <- c(10, 15, 17, 25)
b <- c(5, 8, 6, 9 )
c <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
dfx <- as.matrix(rbind(a,b))
dfx
dfx <- dfx[,1:2]
dfx
dist(dfx)
dfx[1,]-dfx[2,]
(dfx[1,]-dfx[2,])^2
sum((dfx[1,]-dfx[2,])^2)
sqrt(sum((dfx[1,]-dfx[2,])^2))
time <- c(1,2,3,4)
dfx <- as.matrix(rbind(a,b,c))
N <- dim(dfx)[1]
M <- dim(dfx)[2]
m1 <- dfx[, -c(M)]
m2 <- dfx[, -c(1)]
mdif <- m2 - m1
voptimizado <- mdif %*% diag(1/(time[2:M] - time[1:(M - 1)]))
voptimizado
dist(voptimizado)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(tscR)
library(tidyverse)
library(grid)
# Chunk 3
df <- data.frame(T1 = c(140,100,75,35), T2=c(120,120,50,48), T3 = c(100,140,35,70))
df1 <- matrix(NA, nrow=10, ncol=3)
df2 <- matrix(NA, nrow=10, ncol=3)
df3 <- matrix(NA, nrow=10, ncol=3)
df4 <- matrix(NA, nrow=10, ncol=3)
for(i in seq(1,10)){
df1[i,] <- jitter(as.numeric(df[1,]), factor = 1.5)
df2[i,] <- jitter(as.numeric(df[2,]), factor = 1.5)
df3[i,] <- jitter(as.numeric(df[3,]), factor = 1.5)
df4[i,] <- jitter(as.numeric(df[4,]), factor = 1.5)
}
df <- as.data.frame(rbind(df1,df2,df3,df4))
names(df) <- c("T1","T2","T3")
df <- as.data.frame.table(t(df))
df$Var3 <- rep(c("A","B","C","D"), each=30)
p1 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(A)") + ylab("") + ggtitle(label = "Raw trajectories")
p2 <- df %>%
mutate(Var4 = recode(Var3, "B" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "C")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(B)") + ylab("") + ggtitle(label = "Frechet based cluster")
p3 <- df %>%
mutate(Var4 = recode(Var3, "C" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "B")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(C)") + ylab("") + ggtitle(label = "Slope based cluster")
p4 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var3) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(D)") + ylab("") + ggtitle(label = "Combined clusters")
gridExtra::grid.arrange(p1,p2,p3,p4, nrow=2,
bottom = textGrob("Fig. 1",gp=gpar(fontsize=14,font=3)))
# Chunk 5
library(tscR)
# Chunk 7
data(tscR)
df <- tscR
head(df)
# Chunk 8
matplot(t(df), type = "l", col = "gray30", lty = 1, ylab = "")
# Chunk 9
time <- c(1,2,3)
sDist <- slopeDist(df, time)
sclust <- getClusters(sDist, k = 4)
plotCluster(data = df, clust = sclust, ncluster = "all")
plotCluster(df, sclust, 1)
plotCluster(data = df, clust = sclust, ncluster = "all")
plotCluster(df, sclust, 1)
plotCluster(df, sclust, c(1:4))
sclust <- getClusters(sDist, k = 3)
plotCluster(data = df, clust = sclust, ncluster = "all")
plotCluster(df, sclust, 1)
plotCluster(df, sclust, c(1:3))
plotCluster(df, sclust, c(1:2))
fdist <- frechetDistC(df, time)
fclust <- getClusters(fdist, 3)
plotCluster(df, fclust, "all")
ccluster <- combineCluster(sclust, fclust)
plotCluster(df, ccluster, c(1:6))
plotCluster(df, ccluster, "all")
plotCluster(df, ccluster, c(1:6))
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build(vignettes = T)
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
a <- c(10, 15, 17, 25)
b <- c(5, 8, 6, 9 )
c <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
df <- as.data.frame(cbind(x,a,b,c))
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{a1}$")   ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{a2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{a3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{b1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{b2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{b3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{c1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{c2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{c3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. a"))+
geom_text(aes(x=1, y=4, label = "Traject. b"))+
geom_text(aes(x=1, y=-17, label = "Traject. c"))+
theme(legend.position = "none")+
xlab("") + ylab("")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = F, comment = F)
library(ggplot2)
library(latex2exp)
library(tscR)
library(TSdist)
a <- c(10, 15, 17, 25)
b <- c(5, 8, 6, 9 )
c <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
df <- as.data.frame(cbind(x,a,b,c))
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{a1}$")   ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{a2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{a3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{b1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{b2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{b3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{c1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{c2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{c3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. a"))+
geom_text(aes(x=1, y=4, label = "Traject. b"))+
geom_text(aes(x=1, y=-17, label = "Traject. c"))+
theme(legend.position = "none")+
xlab("") + ylab("")
a <- c(10, 15, 17, 25)
b <- c(5, 8, 6, 9 )
c <- c(-19, -14, -12, -4)
x <- c(1, 2, 3, 4)
df <- as.data.frame(cbind(x,a,b,c))
ggplot(df, aes(x=x))+
geom_line(aes(y=a), color = "red")+
geom_point(y=a, col="red")+
geom_line(aes(y=b))+
geom_point(y=b)+
geom_line(aes(y=c), color = "steelblue")+
geom_point(y=c, color="steelblue")+
geom_label(aes(x=1.5, y=14), label = TeX("$S_{a1}$")   ) +
geom_label(aes(x=2.5, y=17), label = TeX("$S_{a2}$")  ) +
geom_label(aes(x=3.5, y=23), label = TeX("$S_{a3}$")  ) +
geom_label(aes(x=1.5, y=7.5), label = TeX("$S_{b1}$")  ) +
geom_label(aes(x=2.5, y=8), label = TeX("$S_{b2}$")  ) +
geom_label(aes(x=3.5, y=9), label = TeX("$S_{b3}$")  ) +
geom_label(aes(x=1.5, y=-15), label = TeX("$S_{c1}$")  ) +
geom_label(aes(x=2.5, y=-12), label = TeX("$S_{c2}$")  ) +
geom_label(aes(x=3.5, y=-7), label = TeX("$S_{c3}$")  ) +
geom_text(aes(x=1, y=12, label = "Traject. a"))+
geom_text(aes(x=1, y=4, label = "Traject. b"))+
geom_text(aes(x=1, y=-17, label = "Traject. c"))+
theme(legend.position = "none")+
xlab("") + ylab("")
df <- data.frame(T1 = c(140,100,75,35), T2=c(120,120,50,48), T3 = c(100,140,35,70))
df1 <- matrix(NA, nrow=10, ncol=3)
df2 <- matrix(NA, nrow=10, ncol=3)
df3 <- matrix(NA, nrow=10, ncol=3)
df4 <- matrix(NA, nrow=10, ncol=3)
for(i in seq(1,10)){
df1[i,] <- jitter(as.numeric(df[1,]), factor = 1.5)
df2[i,] <- jitter(as.numeric(df[2,]), factor = 1.5)
df3[i,] <- jitter(as.numeric(df[3,]), factor = 1.5)
df4[i,] <- jitter(as.numeric(df[4,]), factor = 1.5)
}
df <- as.data.frame(rbind(df1,df2,df3,df4))
names(df) <- c("T1","T2","T3")
df <- as.data.frame.table(t(df))
df$Var3 <- rep(c("A","B","C","D"), each=30)
p1 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(A)") + ylab("") + ggtitle(label = "Raw trajectories")
p2 <- df %>%
mutate(Var4 = recode(Var3, "B" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "C")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(B)") + ylab("") + ggtitle(label = "Frechet based cluster")
p3 <- df %>%
mutate(Var4 = recode(Var3, "C" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "B")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(C)") + ylab("") + ggtitle(label = "Slope based cluster")
p4 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var3) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(D)") + ylab("") + ggtitle(label = "Combined clusters")
gridExtra::grid.arrange(p1,p2,p3,p4, nrow=2,
bottom = textGrob("Fig. 1",gp=gpar(fontsize=14,font=3)))
df <- data.frame(T1 = c(140,100,75,35), T2=c(120,120,50,48), T3 = c(100,140,35,70))
df1 <- matrix(NA, nrow=10, ncol=3)
df2 <- matrix(NA, nrow=10, ncol=3)
df3 <- matrix(NA, nrow=10, ncol=3)
df4 <- matrix(NA, nrow=10, ncol=3)
for(i in seq(1,10)){
df1[i,] <- jitter(as.numeric(df[1,]), factor = 1.5)
df2[i,] <- jitter(as.numeric(df[2,]), factor = 1.5)
df3[i,] <- jitter(as.numeric(df[3,]), factor = 1.5)
df4[i,] <- jitter(as.numeric(df[4,]), factor = 1.5)
}
df <- as.data.frame(rbind(df1,df2,df3,df4))
names(df) <- c("T1","T2","T3")
df <- as.data.frame.table(t(df))
df$Var3 <- rep(c("A","B","C","D"), each=30)
p1 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(A)") + ylab("") + ggtitle(label = "Raw trajectories")
library(tscR)
library(tidyverse)
library(grid)
library(ggplot2)
library(latex2exp)
library(tscR)
library(TSdist)
df <- data.frame(T1 = c(140,100,75,35), T2=c(120,120,50,48), T3 = c(100,140,35,70))
df1 <- matrix(NA, nrow=10, ncol=3)
df2 <- matrix(NA, nrow=10, ncol=3)
df3 <- matrix(NA, nrow=10, ncol=3)
df4 <- matrix(NA, nrow=10, ncol=3)
for(i in seq(1,10)){
df1[i,] <- jitter(as.numeric(df[1,]), factor = 1.5)
df2[i,] <- jitter(as.numeric(df[2,]), factor = 1.5)
df3[i,] <- jitter(as.numeric(df[3,]), factor = 1.5)
df4[i,] <- jitter(as.numeric(df[4,]), factor = 1.5)
}
df <- as.data.frame(rbind(df1,df2,df3,df4))
names(df) <- c("T1","T2","T3")
df <- as.data.frame.table(t(df))
df$Var3 <- rep(c("A","B","C","D"), each=30)
p1 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(A)") + ylab("") + ggtitle(label = "Raw trajectories")
p2 <- df %>%
mutate(Var4 = recode(Var3, "B" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "C")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(B)") + ylab("") + ggtitle(label = "Frechet based cluster")
p3 <- df %>%
mutate(Var4 = recode(Var3, "C" = "A")) %>%
mutate(Var4 = recode(Var4, "D" = "B")) %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var4) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(C)") + ylab("") + ggtitle(label = "Slope based cluster")
p4 <- df %>%
ggplot( aes_(~Var1, ~Freq, group=~Var2, colour=~Var3) ) +
geom_line() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
xlab("(D)") + ylab("") + ggtitle(label = "Combined clusters")
gridExtra::grid.arrange(p1,p2,p3,p4, nrow=2,
bottom = textGrob("Fig. 1",gp=gpar(fontsize=14,font=3)))
devtools::build_vignettes()
devtools::build_vignettes(keep_md = TRUE)
devtools::build(vignettes = TRUE)
devtools::build(vignettes = TRUE)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build(vignettes = TRUE)
devtools::build(vignettes = TRUE)
devtools::build(vignettes = TRUE)
devtools::build(vignettes = TRUE)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build(vignettes = TRUE)
devtools::build(vignettes = TRUE)
devtools::build_vignettes()
devtools::build_vignettes()
knit_with_parameters('/media/fpsanz/datos/tscR/vignettes/tscR.Rmd')
unlink('vignettes/tscR_cache', recursive = TRUE)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
browseVignettes("tscR")
devtools::build()
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
