library(tscR)
library(tidyverse)
library(sqldf)
df<-read.table("../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
dyn.load("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/libs/tscR.so")
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
dim(df2)[2]
time <- c(1,2,3,4)
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
df2 <- sample_n(df,2000)
#Con frechetDist solo,
fd <- tscR::frechetDistC(df2, time)
gcf <- getClusters(fd, 10)
library(tscR)
library(tscR)
df2 <- sample_n(df,1000)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
library(tscR)
library(tscR)
library(tscR)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
library(tscR)
library(tscR)
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- tscR::frechetDistC(df2, time)
plotCluster(df2, gc)
plotCluster(df2, gcf)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc)
plotCluster(df2, gc)
plotCluster(df2, gcf)
#combinar clusters
cc <- combineCluster(gc, gcf)
plotCluster(df2, cc)
cc$clustering
str(cc)
unique(cc$clustering)
df<-read.table("../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
## Si tenemos muchos datos:
is <- imputeSenators(df2, k=100)
x<-df2
k=100
result <- clara(x, k)
senatorsWeight <- as.integer(table(result$clustering))
mySenators <- result$clustering
senatorsWide <- result$medoids
reOrder <- sort(table(result$clustering),decreasing=TRUE)
mySenators <- match(mySenators,names(reOrder))
senatorsWeight <- as.integer(reOrder)
names(senatorsWeight) <- paste("sen",1:100,sep="")
senatorsWide <- senatorsWide[as.integer(names(reOrder)),]
rownames(senatorsWide) <- names(senatorsWeight)
mySenator <- data.frame(id=df,senators=paste("sen",mySenators,sep=""))
mySenator <- data.frame(id=x,senators=paste("sen",mySenators,sep=""))
senatorObj<-list(mySenator=mySenator,senatorsWide=senatorsWide,senatorsWeight=senatorsWeight)
return(senatorObj)
library(tscR)
library(tscR)
library(tscR
)
## Si tenemos muchos datos:
is <- imputeSenators(df2, k=100)
is
## Si tenemos muchos datos:
senators <- imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsWide)
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- getCluster(sDist, 4)
sClust <- getClusters(sDist, 4)
plotCluster(senators$senatorsWide, sClust)
senators$senatorsWide
plotCluster(senators$senatorsWide, sClust)
sClust
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- getClusters(sDist, 4)
sClust
sClust <- getClusters(sDist, 4)
sDist
myclust <- pam(sDist, k=4, diss = T)
myclust
sClust <- tscR::getClusters(sDist, k=4)
sClust
plotCluster(senators$senatorsWide, sClust)
fClust <- tscR::getClusters(fDist, 4)
plotCluster(senators$senatorsWide, fClust)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
#matplot( t(endData@data[1:1000,]), type = "l", lty = 1, col = fcolor(clusteres) )
plot.cluster.senator(endData, multiple = T, ncluster = 3)
#matplot( t(endData@data[1:1000,]), type = "l", lty = 1, col = fcolor(clusteres) )
plotClusterSenator(endData, multiple = T, ncluster = 3)
############
# conjunto de datos aleatorio
time <- c(1,2,3)
t1 <- c(1, 1.5, 3)
t2 <- c(1.3,2.3,3.3)
t3 <- c(1.2, 1.9, 17)
df <- rbind(t1,t2,t3)
matplot(t(df))
matplot(t(df), type = "l")
matplot(t(df), type = "l", lty = 1)
t3 <- c(1.2, 1.9, 1.7)
df <- rbind(t1,t2,t3)
matplot(t(df), type = "l", lty = 1)
t1 <- c(1, 1.5, 3)
t2 <- c(1.3,2.3,3.3)
t3 <- c(1.2, 1.9, 1.7)
t4 <- c(1,2,0.9)
t5 <- c(0.9, 0.2, 1)
t6 <- 1/t1
df <- rbind(t1,t2,t3,t4,t5,t6)
matplot(t(df), type = "l", lty = 1)
t1 <- c(1, 1.5, 3)
t2 <- c(1.3,2.3,3.3)
t3 <- c(1.2, 1.9, 1.7)
t4 <- c(1,2,0.9)
t5 <- c(0.9, 1.1, 1)
t6 <- 1/t4
t7 <- 1/t1
df <- rbind(t1,t2,t3,t4,t5,t6)
matplot(t(df), type = "l", lty = 1)
t8 <- 1/t2
t6 <- 1/t4
t7 <- 1/t1
t8 <- 1/t2
t9 <- 1/t3
df <- rbind(t1,t2,t3,t4,t5,t6,t7,t8,t9)
matplot(t(df), type = "l", lty = 1)
df
############
# conjunto de datos aleatorio
time <- c(1,2,3)
t1 <- c(1, 1.5, 3)
t2 <- c(1.3,2.3,3.3)
t3 <- c(1.2, 1.9, 1.7)
t4 <- c(1,2,0.9)
t5 <- c(0.9, 1.1, 1)
t6 <- 1/t4
t7 <- c(1, -0.5,-2.5)
t8 <- c(0.9, -0.9, -1.9)
t9 <- c(1, -1.3, -0.3)
df <- rbind(t1,t2,t3,t4,t5,t6,t7,t8,t9)
matplot(t(df), type = "l", lty = 1)
apply(df, 1, function(x) {jitter(x, 1) })
apply(df, 2, function(x) {jitter(x, 1) })
df+10
df <- rbind(df, df+5, df-7)
matplot(t(df), type = "l", lty = 1)
df <- df+20
matplot(t(df), type = "l", lty = 1)
df <- apply(df, 2, function(x) {jitter(x, 1) })
matplot(t(df), type = "l", lty = 1)
df <- apply(df, 2, function(x) {jitter(x, 10) })
matplot(t(df), type = "l", lty = 1)
df <- apply(df, 2, function(x) {jitter(x, 10, 5) })
matplot(t(df), type = "l", lty = 1)
t1 <- c(1, 1.5, 3)
t2 <- c(1.3,2.3,3.3)
t3 <- c(1.2, 1.9, 1.7)
t4 <- c(1,2,0.9)
t5 <- c(0.9, 1.1, 1)
t6 <- 1/t4
t7 <- c(1, -0.5,-2.5)
t8 <- c(0.9, -0.9, -1.9)
t9 <- c(1, -1.3, -0.3)
df <- rbind(t1,t2,t3,t4,t5,t6,t7,t8,t9)
df <- rbind(df, df+5, df-7)
df <- df+20
matplot(t(df), type = "l", lty = 1)
matplot(t(df2), type = "l", lty = 1)
df2 <- apply(df, 2, function(x) {jitter(x, 10, 1) })
matplot(t(df2), type = "l", lty = 1)
t1 <- c(5,6,7)
t2 <- c(3,3,3)
t3 <- c(2, 1, 0)
df <- rbind(t1,t2,t3)
matplot(t(df), type = "l", lty = 1)
df2 <- apply(df, 2, function(x) {jitter(x, 10, 1) })
matplot(t(df2), type = "l", lty = 1)
df2 <- apply(df, 2, function(x) {jitter(x, 10, 0.5) })
matplot(t(df2), type = "l", lty = 1)
for(i in seq(1:1000)){
df <- rbind(df,apply(df, 2, function(x) {jitter(x, 10, 0.5) }))
}
df <- rbind(t1,t2,t3)
for(i in seq(1:100)){
df <- rbind(df,apply(df, 2, function(x) {jitter(x, 10, 0.5) }))
}
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 0.5) }))
}
df <- rbind(t1,t2,t3)
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 0.5) }))
}
matplot(t(df2), type = "l", lty = 1)
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 1) }))
}
matplot(t(df2), type = "l", lty = 1)
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 1.5) }))
}
matplot(t(df2), type = "l", lty = 1)
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 1.2) }))
}
matplot(t(df2), type = "l", lty = 1)
library(tscR)
sd <- slopeDist(df2, time)
sclust <- getClusters(sd, 3)
plotCluster(df2, sclust)
fd <- frechetDistC(df2, time)
fclust <- getClusters(sd, 3)
fclust <- getClusters(fd, 3)
plotCluster(df2, fclust)
sclust$clustering
df2[sclust$clustering == 1, ]
asc <- df2[sclust$clustering == 1, ]
matplot(t(asc))
matplot(t(asc), type="l", lty=1)
asc <- df2[sclust$clustering == 2, ]
matplot(t(asc), type="l", lty=1)
asc2 <- asc[asc$V1>4,]
matplot(t(asc2), type="l", lty=1)
df+1
df+c(1,2)
asc3 <- asc2 + 5
df3 <- rbind(asc2,asc3)
matplot(t(asc3), type="l", lty=1, col = "black")
asc3 <- asc2 + 5
df3 <- rbind(asc2,asc3)
matplot(t(df3), type="l", lty=1, col = "black")
asc3 <- asc2 + 10
df3 <- rbind(asc2,asc3)
matplot(t(df3), type="l", lty=1, col = "black")
desc <- df2[sclust$clustering == 3, ]
matplot(t(desc), type="l", lty=1)
desc <- df2[sclust$clustering == 1, ]
matplot(t(desc), type="l", lty=1)
asc <- df2[sclust$clustering == 1, ]
asc <- df2[sclust$clustering == 1, ]
asc2 <- asc[asc$V1>4,]
matplot(t(asc), type="l", lty=1)
matplot(t(dfd2), type="l", lty=1)
matplot(t(df2), type="l", lty=1)
matplot(t(df3), type="l", lty=1, col = sclust$clustering)
matplot(t(df2), type="l", lty=1, col = sclust$clustering)
asc2 <- asc[asc$V1>4,]
asc <- df2[sclust$clustering == 1, ]
asc2 <- asc[asc$V1>4,]
matplot(t(asc2), type="l", lty=1, col = sclust$clustering)
matplot(t(asc2), type="l", lty=1, col = "black")
asc3 <- asc2 + 10
df3 <- rbind(asc2,asc3)
matplot(t(df3), type="l", lty=1, col = "black")
asc3 <- asc2 + 6
df3 <- rbind(asc2,asc3)
matplot(t(df3), type="l", lty=1, col = "black")
plotCluster(df2, fclust)
desc <- df2[sclust$clustering == 3]
desc <- df2[sclust$clustering == 3,]
matplot(t(asc3), type="l", lty=1, col = "black")
matplot(t(desc), type="l", lty=1, col = "black")
asc <- df2[fclust$clustering == 1, ]
asc2 <- asc[asc$V1>4,]
matplot(t(asc2), type="l", lty=1, col = "black")
asc <- df2[sclust$clustering == 1, ]
asc2 <- asc[asc$V1>4,]
matplot(t(asc2), type="l", lty=1, col = "black")
desc <- df2[sclust$clustering == 3,]
matplot(t(desc), type="l", lty=1, col = "black")
desc2 <- desc[desc$V1<3, ]
matplot(t(desc2), type="l", lty=1, col = "black")
matplot(t(df3), type="l", lty=1, col = "black")
desc
desc3 <- desc2 +6
desc3 <- desc2 +4
desc4 <- desc2 +9
df4 <- rbind(desc3,desc4)
matplot(t(df4), type="l", lty=1, col = "black")
desc4 <- desc2 +10
df4 <- rbind(desc3,desc4)
matplot(t(df4), type="l", lty=1, col = "black")
df5 <- rbind(df3,df4)
matplot(t(df5), type="l", lty=1, col = "black")
plotCluster(df2, fclust)
write.table(df2, "exampleData.txt", sep = ";", row.names = F, col.names = F)
write.table(df5, "subexampleData.txt", sep = ";", row.names = F, col.names = F)
sd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
fclus <- getClusters(fd, 2)
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc)
plotCluster(df5, sclust)
plotCluster(df5, sclus)
plotCluster(df5, fclus)
fclus <- getClusters(fd, 4)
plotCluster(df5, fclus)
sclus <- getClusters(sd, 4)
plotCluster(df5, sclus)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus)
fclus <- getClusters(fd, 2)
desc3 <- desc2 +6
desc4 <- desc2 +12
df4 <- rbind(desc3,desc4)
matplot(t(df4), type="l", lty=1, col = "black")
df5 <- rbind(df3,df4)
matplot(t(df5), type="l", lty=1, col = "black")
write.table(df5, "subexampleData.txt", sep = ";", row.names = F, col.names = F)
sd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus)
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus)
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc)
desc3 <- desc2 +5
desc4 <- desc2 +11
df4 <- rbind(desc3,desc4)
matplot(t(df4), type="l", lty=1, col = "black")
df5 <- rbind(df3,df4)
matplot(t(df5), type="l", lty=1, col = "black")
write.table(df5, "subexampleData.txt", sep = ";", row.names = F, col.names = F)
sd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus)
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus)
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc)
plotCluster(df5, sclus)
plotCluster(df5, fclus)
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc)
df5 <- rbind(df3,df4)
matplot(t(df5), type="l", lty=1, col = "black")
write.table(df5, "subexampleData.txt", sep = ";", row.names = F, col.names = F)
library(tscR)
