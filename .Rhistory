library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tidyverse)
library(sqldf)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
gc
plotCluster(df2, gc, "all")
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
class(sd)
readRDS("~/Descargas/vignette.rds")
kk <- readRDS("~/Descargas/vignette.rds")
View(kk)
class(ll)
class(kk)
browseVignettes(tscR)
browseVignettes("tscR")
devtools::install()
browseVignettes("tscR")
browseVignettes("tscR::tscR")
library(tscR)
library(tscR)
browseVignettes("tscR")
devtools::build_vignettes()
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
vignette <- readRDS("/media/fpsanz/datos/tscR/Meta/vignette.rds")
View(vignette)
library(tscR)
browseVignettes("tscR")
vignette(tscR)
vignette("tscR")
vignette("tscR", package="tscR")
library(tscR)
vignette("tscR", package="tscR")
vignette("tscR", package="tscR")
vignette("tscR", package="tscR")
devtools::install("tscR", build_vignettes = T)
devtools::install( build_vignettes = T)
library(tscR)
vignette("tscR", package="tscR")
library(tscR)
library(tscR)
library(tscR)
vignette("tscR", package="tscR")
devtools::install( build_vignettes = T)
library(tscR)
vignette("tscR", package="tscR")
vignette("tscR")
devtools::install( build_vignettes = T)
library(tscR)
library(tscR)
library(tscR)
devtools::document()
devtools::document()
devtools::build()
library(tscR)
library(tscR)
data("tscR")
a <- tscR
a
rm(a)
rm(tscR)
rm(ok)
library(RColorBrewer)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
devtools::build_vignettes()
devtools::build()
library(tscR)
devtools::build_vignettes()
detach("package:tscR", unload = TRUE)
devtools::build()
library(tscR)
browseVignettes()
browseVignettes(tscR)
browseVignettes("tscR")
vignettes("tscR")
devtools::build_vignettes(tscR)
devtools::build_vignettes(t"scR")
devtools::build_vignettes("tscR")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build()
library(tscR)
vignettes("tscR")
vignette("tscR")
browseVignettes("tscR")
library(tscR)
devtools::build()
devtools::build()
library(tscR)
browseVignettes("tscR")
devtools::build()
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
browseVignettes("tscR")
vignette("tscR")
devtools::build( vignettes = TRUE)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
detach("package:tscR", unload = TRUE)
library(tscR)
library(prettydoc)
detach("package:tscR", unload = TRUE)
devtools::build( vignettes = TRUE)
library(prettydoc)
library(tscR)
browseVignettes("tscR")
devtools::build( build_vignettes = TRUE)
devtools::build( args = build_vignettes = TRUE)
devtools::build( args = c(build_vignettes = TRUE))
devtools::build( vignettes = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
browseVignettes("tscR")
vignette("tscR", "tscR")
library(tscR)
devtools::build_vignettes()
detach("package:tscR", unload = TRUE)
remove.packages(tscR)
remove.packages("tscR")
devtools::build_vignettes()
install.packages("../tscR_0.1.0.tar.gz")
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
browseVignettes("tscR")
library(tidyverse)
library(sqldf)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
library(tscR)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc, "all")
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- frechetDistC(df2, time)
gcf <- getClusters(fd, 10)
plotCluster(df2, gcf)
#combinar clusters
cc <- combineCluster(gc, gcf)
senators <- tscR::imputeSenators(df2, k=100)
str(senators)
head(df2,2)
head(senators$mySenator,2)
head(senators$senatorsWide,2)
head(senators$senatorsWeight,2)
head(senators$senatorsWeight)
x <- df2
k=100
result <- clara(x, k)
library(cluster)
result <- clara(x, k)
senatorsWeight <- as.integer(table(result$clustering))
senatorsWeight
result <- clara(x, k)
senatorsWeight <- as.integer(table(result$clustering))
senatorsWeight
result$clustering
table(result$clustering)
as.integer(table(result$clustering))
result$clustering
senators$mySenator$senators
reOrder
reOrder <- sort(table(result$clustering),decreasing=TRUE)
reOrder
result$clustering
table(result$clustering)
which(result$clustering == 100)
which(result$clustering == 1)
str(result)
mySenator <- data.frame(id=x,senators=paste("sen",result$clustering,sep=""))
View(mySenator)
View(senators$mySenator)
str(senators)
reOrder <- sort(table(result$clustering),decreasing=TRUE)
reOrder
str(result)
kk <- clara(df2, 4)
factoextra::fviz_cluster(kk, df2)
kk <- clara(df2, 2)
factoextra::fviz_cluster(kk, df2)
kk <- clara(df2[1:100,], 2)
factoextra::fviz_cluster(kk, df2)
kk <- clara(df2[1:100,], 2, keep.data = T)
clusplot(kk)
clusplot(kk, labels = 1)
str(kk)
factoextra::fviz_cluster(kk, df2)
factoextra::fviz_cluster(kk, df2, ellipse = T)
str(kk)
kk$medoids
kk$data
cbind(kk$data,kk$clustering)
str(kk)
kk <- clara(df2[1:100,], 4, keep.data = T)
str(kk)
factoextra::fviz_cluster(kk, df2, ellipse = T)
#reOrder <- sort(table(result$clustering),decreasing=TRUE)
#mySenators <- match(mySenators,names(reOrder))
senatorsCluster <- seq(1:k)
senatorsCluster
#senatorsWeight <- as.integer(table(result$clustering))
#mySenators <- result$clustering
senatorsData <- result$medoids
senatorsData
names(senatorsCluster) <- paste("sen",1:k,sep="")
senatorsCluster
#senatorsWide <- senatorsWide[as.integer(names(reOrder)),]
rownames(senatorsData) <- names(senatorsCluster)
senatorsData
senatorObj<-list(mySenator=mySenator,senatorsWide=senatorsWide,senatorsWeight=senatorsWeight)
senatorObj<-list(mySenator=mySenator,senatorsData=senatorsData,senatorsCluster=senatorsCluster)
senatorObj
mySenator
## asignar clusters de senators a resto de datos
imputeSenatorToData <- function(senators, combined){
data <- senators$mySenator
data <- data %>% mutate_at(vars(senators), as.character)
senWide <- senators$senatorsData
combinedCluster <- data.frame(senId = rownames(senWide), combClust =  paste("end", combined$clustering, sep=""))
combinedCluster <- combinedCluster %>% mutate_all(as.character)
endData <- left_join(data, combinedCluster, by = c("senators" = "senId"))
finalData <- new("imputeSenator", data = as.data.frame(endData[,1:(ncol(endData)-2)]),
senators = endData$senators,
endCluster = endData$combClust
)
return(finalData)
}
library(tscR)
library(tidyverse)
library(sqldf)
library(tscR)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
senators <- tscR::imputeSenators(df2, k=100)
senators
sDist <- slopeDist(senators$senatorsData, time)
fDist <- frechetDistC(senators$senatorsData, time)
sClust <- tscR::getClusters(sDist, k=2)
plotCluster(senators$senatorsWide, sClust, 2)
plotCluster(senators$senatorsData, sClust, 2)
plotCluster(senators$senatorsData, sClust, "all")
fDist <- frechetDistC(senators$senatorsData, time)
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorsData, fClust, 2)
plotCluster(senators$senatorsData, fClust, "all")
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
endData
str(endData)
class(senators)
str(senators)
data <- senators$mySenator
data
data <- data %>% mutate_at(vars(senators), as.character)
data
senWide <- senators$senatorsData
senWide
combinedCluster <- data.frame(senId = rownames(senWide), combClust =  paste("end", combined$clustering, sep=""))
combinedCluster <- combinedCluster %>% mutate_all(as.character)
combinedCluster
combined
combined <- combineCluster(sClust, fClust)
combined
combined$clustering
unique(combined$clustering)
x <- fClust
y <- sClust
uclust <- as.data.frame( cbind( c( 1:length( x$clustering )), x$clustering, y$clustering ) )
uclust
uclust$V4 <- NA
uclust$V4 <- (uclust$V2*100) + (uclust$V3*10)
uclust
uclust$V4
unique(uclust$V4)
senators
data <- senators$mySenator
data
data <- data %>% mutate_at(vars(senators), as.character)
senData <- senators$senatorsData
senData
combinedCluster <- data.frame(senId = rownames(senData), combClust =  paste("end", combined$clustering, sep=""))
combinedCluster
combinedCluster <- combinedCluster %>% mutate_all(as.character)
combinedCluster
data
combinedCluster
names(data)
endData <- left_join(data, combinedCluster, by = c("senators" = "senId"))
endData
names(combinedCluster)
data <- senators$mySenator
View(data)
combinedCluster
endData
gsub("sen","",endData$senators)
finalData <- new("imputeSenator", data = as.data.frame(endData[,1:(ncol(endData)-2)]),
senators = as.numeric(gsub("sen","",endData$senators)),
endCluster = as.nimeric(gsub("end","",endData$combClust))
)
finalData <- new("imputeSenator", data = as.data.frame(endData[,1:(ncol(endData)-2)]),
senators = as.numeric(gsub("sen","",endData$senators)),
endCluster = as.numeric(gsub("end","",endData$combClust))
)
finalData <- new("imputeSenator", data = as.data.frame(endData[,1:(ncol(endData)-2)]),
senators = gsub("sen","",endData$senators),
endCluster = gsub("end","",endData$combClust)
)
finalData
df2 <- sample_n(df,10000)
senators <- tscR::imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsData, time)
fDist <- frechetDistC(senators$senatorsData, time)
sClust <- tscR::getClusters(sDist, k=2)
plotCluster(senators$senatorsData, sClust, "all")
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorsData, fClust, "all")
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
endData
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
class(sDist)
dim(sDist)
length(sDist)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
length(sd)
library(tscR)
devtools::build()
df2 <- sample_n(df,1000)
senators <- tscR::imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsData, time)
fDist <- frechetDistC(senators$senatorsData, time)
senators$senatorsData
devtools::build()
library(tscR)
library(tidyverse)
library(sqldf)
library(tscR)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
senators <- tscR::imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsData, time)
sDist <- slopeDist(senators$senatorData, time)
fDist <- frechetDistC(senators$senatorData, time)
sClust <- tscR::getClusters(sDist, k=2)
plotCluster(senators$senatorsData, sClust, "all")
plotCluster(senators$senatorData, sClust, "all")
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorData, fClust, "all")
combined <- combineCluster(sClust, fClust)
combined
endData <- imputeSenatorToData(senators = senators, combined = combined)
endData
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData,  ncluster = 3)
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6,7,8))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6,7,8,9,10))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6,7,8,9,10))
plotClusterSenator(endData, ncluster = c(1,2,3,4,5,6,7,8,9))
browseVignettes("tscR")
remove.packages("tscR")
devtools::build(vignettes = T)
install.packages("../tscR_0.1.0.tar.gz")
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
browseVignettes("tscR")
detach("package:tscR", unload = TRUE)
detach("package:tscR", unload = TRUE)
library(tscR)
remove.packages("tscR")
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
warnings()
detach("package:tscR", unload = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
detach("package:tscR", unload = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
library(tscR)
remove.packages("tscR")
devtools::build(vignettes = T)
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
browseVignettes()
||T1|T2|T3|
|:----|---:|---:|---:|
|$Gene1$|100|150|200|
|$Gene2$|98|75|90|
|$Gene_{n}$|10|50|123|
## subpunto 1
devtools::install_github("fpsanz/tscR")
devtools::install_github("fpsanz/tscR")
devtools::install_github("fpsanz/tscR")
devtools::install("tscR")
devtools::install()
devtools::install()
library(tscR)
devtools::install()
data.frame(T1 = c(100,150,10), T2=c(150,120,200), T3 = c(200,90,80))
graphics::matplot(t(df))
df <- matrix(T1 = c(100,150,10), T2=c(150,120,200), T3 = c(200,90,80))
graphics::matplot(t(df))
df
df <- data.frame(T1 = c(100,150,10), T2=c(150,120,200), T3 = c(200,90,80))
df
graphics::matplot(t(df))
graphics::matplot(t(df), type = "l")
graphics::matplot(t(df), type = "l", ylim = c(0,200))
df
graphics::matplot(t(df), type = "l", ylim = c(0,200))
df
df <- data.frame(T1 = c(100,150,100), T2=c(150,120,200), T3 = c(200,90,80))
df
graphics::matplot(t(df), type = "l", ylim = c(0,200))
df <- data.frame(T1 = c(100,80,100), T2=c(150,60,200), T3 = c(200,40,80))
df
graphics::matplot(t(df), type = "l", ylim = c(0,200))
df <- data.frame(T1 = c(140,100,50,10), T2=c(120,120,30,30), T3 = c(100,140,10,50))
df
graphics::matplot(t(df), type = "l", ylim = c(0,200))
graphics::matplot(t(df), type = "l", ylim = c(0,200), lty = 1)
graphics::matplot(t(df), type = "l", ylim = c(0,150), lty = 1)
graphics::matplot(t(df), c(1,2,3), type = "l", ylim = c(0,150), lty = 1, )
graphics::matplot(c(1,2,3), t(df), type = "l", ylim = c(0,150), lty = 1, )
graphics::matplot( as.factor(c(1,2,3)), t(df), type = "l", ylim = c(0,150), lty = 1, )
graphics::matplot(x =  as.factor(c(1,2,3)), t(df), type = "l", ylim = c(0,150), lty = 1, )
graphics::matplot( t(df), type = "l", ylim = c(0,150), lty = 1, )
library(tidyverse)
