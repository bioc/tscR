sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc)
plotCluster(df2, gc, 3)
data <- df2
clust <- fc
clust <- gc
ncluster = 3
colors <- fcolor(clust$clustering)
matplot(t(data), lty = 1, type = "l", col=colors,
ylab = "Trajectories", xlab="Time" )
clust@clustering
clust@clustering
clusteres <- as.numeric( clust$clustering) )
clusteres <- as.numeric( clust$clustering)
posCluster <- which(clusteres %in% ncluster)
posCluster
posCluster2 <- clusteres[posCluster]
colors <- "red"
matplot(t(x@data[clusteres==ncluster,]), lty = 1, type = "l", col=colors,
ylab = "Trajectories", xlab="Time" )
matplot(t(data[clusteres==ncluster,]), lty = 1, type = "l", col=colors,
ylab = "Trajectories", xlab="Time" )
posCluster2
posCluster
clusteres==ncluster
clusteres <- as.numeric( clust$clustering)
colors <- "red"
matplot(t(data[clusteres==ncluster,]), lty = 1, type = "l", col=colors,
ylab = "Trajectories", xlab="Time" )
clusteres <- as.numeric(clust$clustering)
posCluster <- which(clusteres %in% ncluster)
posCluster
ncluster<-c(1,2,3)
ncluster<-c(1,2)
n <- ceiling( length( ncluster ) / 2 )
n
clusteres <- as.numeric(clust$clustering)
clusteres
posCluster <- which(clusteres %in% ncluster)
posCluster
posCluster2 <- clusteres[posCluster]
colors <- fcolor(c(1:length(ncluster)))
par( mfrow = c(n,2) )
c=1
for(i in ncluster){
matplot(t(x@data[clusteres==i,]), lty = 1, type = "l", col=colors[c],
ylab="Trajectories",xlab="Time"  )
c = c + 1
}
par( mfrow = c(1,1) )
for(i in ncluster){
matplot(t(data[clusteres==i,]), lty = 1, type = "l", col=colors[c],
ylab="Trajectories",xlab="Time"  )
c = c + 1
}
par( mfrow = c(n,2) )
c=1
for(i in ncluster){
matplot(t(data[clusteres==i,]), lty = 1, type = "l", col=colors[c],
ylab="Trajectories",xlab="Time"  )
c = c + 1
}
par( mfrow = c(1,1) )
plotCluster(df2, gc, 8)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc, 8)
library(tscR)
library(tscR)
plotCluster(df2, gc, 8)
plotCluster(df2, gc, 8)
plotCluster(df2, gc, 8)
par( mfrow = c(1,1) )
plotCluster(df2, gc, 8)
plotCluster(df2, gc, c(1:10))
plotCluster(df2, gc, c(1:8))
plotCluster(df2, gc, c(1:6))
plotCluster(df2, gc, c(1:8))
plotCluster(df2, gc, c(1:10))
plotCluster(df2, gc, c(1:4))
plotCluster(df2, gc, c(2:8))
plotCluster(df2, gc, c(5:8))
library(tscR)
class(sd)
data(tscR, package="tscR")
data(tscRdata, package="tscR")
data(tscRdata.txt, package="tscR")
data("tscRdata.txt", package="tscR")
library(tscR)
library(tscR)
data("tscRdata.txt", package="tscR")
data(tscRdata.txt", package="tscR")
data(tscRdata, package="tscR")
read.table("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/extdata/tscRdata")
read.table("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/extdata/tscRdata", sep=";")
kk <- read.table("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/extdata/tscRdata", sep=";")
View(kk)
kk <- read.table("~/R/x86_64-pc-linux-gnu-library/3.6/tscR/extdata/tscRdata", sep=";", col.names = c("T1","T2","T3"))
save(kk, file = "/media/fpsanz/datos/tscR/inst/extdata/tscRdata.rda")
library(tscR)
library(tscR)
data(tscRdata, package="tscR")
data(tscRdata, package="tscR")
library(tscR)
library(tscR)
data(tscRdata, package="tscR")
tscRdata
kk <- tscRdata
data(tscRdata, package="tscR")
load("/media/fpsanz/datos/tscR/data/tscRdata.rda")
View(data)
library(tscR)
data(tscR, package="tscR")
data(tscRdata, package="tscR")
library(tscR)
library(tscR)รง
library(tscR)
library(tscR)
data(tscR, package="tscR")
tscR::data(tscR, package="tscR")
data(tscR, package="tscR")
data(tscR, package="tscR")
data(tscR)
tscR
data(tscR, package="tscR")
data(ictusShort)
data(ictusShort, package="kmlShape")
kk
data(tscR, package="tscR")
data(tscR, package="tscR")
rm(kk)
data(tscR, package="tscR")
kk
tscR <- kk
save(tscR, file = "/media/fpsanz/datos/tscR/data/tscR.rda")
library(tscR)
rm(tscR)
data(tscR)
tscR
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
data(tscR)
rm(tscR)
data(tscR)
senators <- tscR::imputeSenators(df2, k=100)
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
sClust <- tscR::getClusters(sDist, k=6)
plotCluster(senators$senatorsWide, sClust)
sDist <- slopeDist(senators$senatorsWide, time)
fDist <- frechetDist(senators$senatorsWide, time)
fDist <- frechetDistC(senators$senatorsWide, time)
sClust <- tscR::getClusters(sDist, k=2)
plotCluster(senators$senatorsWide, sClust)
senators <- tscR::imputeSenators(df2, k=100)
senators
plotCluster(senators$senatorsWide, sClust)
plotCluster(senators$senatorsWide, sClust, 2)
fClust <- tscR::getClusters(fDist, 6)
plotCluster(senators$senatorsWide, fClust, 2)
combined <- combineCluster(sClust, fClust)
endData <- imputeSenatorToData(senators = senators, combined = combined)
clusteres <- as.numeric(gsub("end","",endData@endCluster[1:1000]))
plotClusterSenator(endData, ncluster = "all")
plotClusterSenator(endData, ncluster = "all")
library(tscR)
library(tidyverse)
library(sqldf)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc, c(5:8))
library(tscR)
plotCluster(df2, gc, c(5:8))
plotCluster(df2, gc, ncluster = "all")
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
plotCluster(df2, gc, c(5:8))
plotCluster(df2, gc, "all"
#Con frechetDist solo, max 2000 trayectorias, sino pam puede petar
fd <- frechetDistC(df2, time)
plotCluster(df2, gc, "all")
############
# conjunto de datos aleatorio
time <- c(1,2,3)
t1 <- c(5,6,7)
t2 <- c(3,3,3)
t3 <- c(2, 1, 0)
df <- rbind(t1,t2,t3)
matplot(t(df), type = "l", lty = 1)
df2 <- data.frame()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 1.2) }))
}
matplot(t(df2), type = "l", lty = 1)
matplot(t(df2), type = "l", lty = 1, col=1)
matplot(t(df2), type = "l", lty = 1, col=1, xlab = "trajectories")
matplot(t(df2), type = "l", lty = 1, col=1, xlab = "trajectories")
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
pdf("image1.pdf", width = 10, height = 10)
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
dev.off()
library(tscR)
sd <- slopeDist(df2, time)
sclust <- getClusters(sd, 3)
plotCluster(df2, sclust)
plotCluster(df2, sclust, "all")
pdf("image1.pdf", width = 10, height = 10)
plotCluster(df2, sclust, "all")
dev.off()
for(i in seq(1:100)){
df2 <- rbind(df2 ,apply(df, 2, function(x) {jitter(x, 10, 1.2) }))
}
pdf("image1.pdf", width = 10, height = 10)
pdf("image1.pdf", width = 10, height = 10)
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
dev.off()
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
pdf("image1.pdf", width = 10, height = 10)
matplot(t(df2), type = "l", lty = 1, col=1, ylab = "trajectories")
dev.off()
pdf("image2.pdf", width = 10, height = 10)
plotCluster(df2, sclust, "all")
dev.off()
plotCluster(df2, sclust, "all")
dev.off()
plotCluster(df2, sclust, "all")
fd <- frechetDistC(df2, time)
fclust <- getClusters(fd, 3)
plotCluster(df2, fclust)
plotCluster(df2, fclust, "all")
pdf("image3.pdf", width = 10, height = 10)
plotCluster(df2, fclust, "all")
dev.off()
asc <- df2[sclust$clustering == 1, ]
asc2 <- asc[asc$V1>4,]
matplot(t(asc2), type="l", lty=1, col = "black")
asc3 <- asc2 + 6
df3 <- rbind(asc2,asc3)
matplot(t(df3), type="l", lty=1, col = "black")
desc <- df2[sclust$clustering == 3,]
desc2 <- desc[desc$V1<3, ]
desc3 <- desc2 +5
desc4 <- desc2 +11
df4 <- rbind(desc3,desc4)
matplot(t(df4), type="l", lty=1, col = "black")
df5 <- rbind(df3,df4)
matplot(t(df5), type="l", lty=1, col = "black")
ssd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus)
plotCluster(df5, sclus, "all")
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus. "all")
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus. "all")
plotCluster(df5, fclus, "all")
plotCluster(df5, cc, "all")
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc, "all")
ssd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus, "all")
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus, "all")
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc, "all")
plotCluster(df2, fclust, "all")
cc <- combineCluster(sClust, fClust)
sd <- slopeDist(df2, time)
sclust <- getClusters(sd, 3)
pdf("image2.pdf", width = 10, height = 10)
plotCluster(df2, sclust, "all")
dev.off()
fd <- frechetDistC(df2, time)
fclust <- getClusters(fd, 3)
plotCluster(df2, fclust, "all")
cc <- combineCluster(sClust, fClust)
cc <- combineCluster(sclust, fclust)
plotCluster(df2, cc, "all")
ssd <- slopeDist(df5, time)
fd <- frechetDistC(df5, time)
sclus <- getClusters(sd, 2)
plotCluster(df5, sclus, "all")
fclus <- getClusters(fd, 2)
plotCluster(df5, fclus, "all")
cc <- combineCluster(sclus, fclus)
plotCluster(df5, cc, "all")
devtools::use_vignette("tscR")
library(rmarkdown)
usethis::use_vignette()
usethis::use_vignette("tscR")
library(tscR)
library(tscR)
library(tscR)
knit_with_parameters('/media/fpsanz/datos/tscR/vignettes/tscR.Rmd')
library(tscR)
library(tscR)
rmarkdown::html_vignette()
browseVignettes("ACME")
browseVignettes("clusterProfiler")
install.packages("prettydoc")
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tidyverse)
library(sqldf)
df<-read.table( "../tscR_pruebas/P1MMM_timeSeries.txt",sep="\t",header = T, stringsAsFactors = F)
df <- na.omit(df)
df <- df %>% select(c(2,3,4,5,6))
df <- df %>% group_by(GENE_SYMBOL) %>% summarise_at(vars(1,2,3,4), mean)
rownames(df) <- df$GENE_SYMBOL
df <- df %>% select(-c(1))
names(df) <- gsub("P1MMM_","", names(df))
df2 <- sample_n(df,1000)
time <- c(1,2,3,4)
#Con slopeDist solo, max 2000 trayectorias, sino pam tarda mucho
sd <- tscR::slopeDist(df2, time)
gc <- getClusters(sd, 10)
gc
plotCluster(df2, gc, "all")
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
class(sd)
readRDS("~/Descargas/vignette.rds")
kk <- readRDS("~/Descargas/vignette.rds")
View(kk)
class(ll)
class(kk)
browseVignettes(tscR)
browseVignettes("tscR")
devtools::install()
browseVignettes("tscR")
browseVignettes("tscR::tscR")
library(tscR)
library(tscR)
browseVignettes("tscR")
devtools::build_vignettes()
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
vignette <- readRDS("/media/fpsanz/datos/tscR/Meta/vignette.rds")
View(vignette)
library(tscR)
browseVignettes("tscR")
vignette(tscR)
vignette("tscR")
vignette("tscR", package="tscR")
library(tscR)
vignette("tscR", package="tscR")
vignette("tscR", package="tscR")
vignette("tscR", package="tscR")
devtools::install("tscR", build_vignettes = T)
devtools::install( build_vignettes = T)
library(tscR)
vignette("tscR", package="tscR")
library(tscR)
library(tscR)
library(tscR)
vignette("tscR", package="tscR")
devtools::install( build_vignettes = T)
library(tscR)
vignette("tscR", package="tscR")
vignette("tscR")
devtools::install( build_vignettes = T)
library(tscR)
library(tscR)
library(tscR)
devtools::document()
devtools::document()
devtools::build()
library(tscR)
library(tscR)
data("tscR")
a <- tscR
a
rm(a)
rm(tscR)
rm(ok)
library(RColorBrewer)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
library(tscR)
devtools::build_vignettes()
devtools::build()
library(tscR)
devtools::build_vignettes()
detach("package:tscR", unload = TRUE)
devtools::build()
library(tscR)
browseVignettes()
browseVignettes(tscR)
browseVignettes("tscR")
vignettes("tscR")
devtools::build_vignettes(tscR)
devtools::build_vignettes(t"scR")
devtools::build_vignettes("tscR")
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build()
library(tscR)
vignettes("tscR")
vignette("tscR")
browseVignettes("tscR")
library(tscR)
devtools::build()
devtools::build()
library(tscR)
browseVignettes("tscR")
devtools::build()
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
browseVignettes("tscR")
vignette("tscR")
devtools::build( vignettes = TRUE)
browseVignettes("tscR")
library(tscR)
browseVignettes("tscR")
detach("package:tscR", unload = TRUE)
library(tscR)
library(prettydoc)
detach("package:tscR", unload = TRUE)
devtools::build( vignettes = TRUE)
library(prettydoc)
library(tscR)
browseVignettes("tscR")
devtools::build( build_vignettes = TRUE)
devtools::build( args = build_vignettes = TRUE)
devtools::build( args = c(build_vignettes = TRUE))
devtools::build( vignettes = TRUE)
library(tscR)
detach("package:tscR", unload = TRUE)
library(tscR)
browseVignettes("tscR")
vignette("tscR", "tscR")
library(tscR)
devtools::build_vignettes()
detach("package:tscR", unload = TRUE)
remove.packages(tscR)
remove.packages("tscR")
devtools::build_vignettes()
install.packages("../tscR_0.1.0.tar.gz")
install.packages("/media/fpsanz/datos/tscR_0.1.0.tar.gz", repos = NULL, type = "source")
library(tscR)
browseVignettes("tscR")
